{
  "version": 3,
  "sources": ["wrangler-modules-watch:wrangler:modules-watch", "../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/modules-watch-stub.js", "../../../src/utils/base64url.ts", "../../../src/utils/googleAuth.ts", "../../../src/publish/html.ts", "../../../src/publish/github.ts", "../../../src/publish/index.ts", "../../../src/utils/hash.ts", "../../../src/ingest/lastfm.ts", "../../../src/ingest/youtube.ts", "../bundle-buFmFx/middleware-loader.entry.ts", "../bundle-buFmFx/middleware-insertion-facade.js", "../../../src/index.ts", "../../../src/utils/cookie.ts", "../../../src/utils/time.ts", "../../../src/sheets.ts", "../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "C:\\Users\\Lawrence.work\\Desktop\\Projects\\lnara.com\\consumed-backend\\.wrangler\\tmp\\dev-31trI2",
  "sourcesContent": ["", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "export function base64UrlEncode(buf: ArrayBuffer | Uint8Array | string): string {\n  let binary = \"\";\n  if (typeof buf === \"string\") {\n    binary = btoa(unescape(encodeURIComponent(buf)));\n  } else {\n    const bytes = buf instanceof Uint8Array ? buf : new Uint8Array(buf);\n    let s = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) s += String.fromCharCode(bytes[i]);\n    binary = btoa(s);\n  }\n  return binary.replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\n\nexport function base64ToArrayBuffer(b64: string): ArrayBuffer {\n  const binary = atob(b64);\n  const len = binary.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) bytes[i] = binary.charCodeAt(i);\n  return bytes.buffer;\n}\n\nexport function pemToPkcs8(pem: string): ArrayBuffer {\n  const clean = pem.replace(/-----BEGIN [^-]+-----/g, \"\").replace(/-----END [^-]+-----/g, \"\").replace(/\\s+/g, \"\");\n  return base64ToArrayBuffer(clean);\n}\n\n", "import { base64UrlEncode, pemToPkcs8 } from \"./base64url\";\n\ntype SA = {\n  client_email: string;\n  private_key: string;\n};\n\nexport async function getGoogleAccessToken(sa: SA, scope: string): Promise<string> {\n  const iat = Math.floor(Date.now() / 1000);\n  const exp = iat + 3600; // 1 hour\n  const header = { alg: \"RS256\", typ: \"JWT\" };\n  const claim = {\n    iss: sa.client_email,\n    scope,\n    aud: \"https://oauth2.googleapis.com/token\",\n    exp,\n    iat,\n  };\n\n  const enc = new TextEncoder();\n  const headerB64 = base64UrlEncode(JSON.stringify(header));\n  const claimB64 = base64UrlEncode(JSON.stringify(claim));\n  const message = `${headerB64}.${claimB64}`;\n\n  const pkcs8 = pemToPkcs8(sa.private_key);\n  const key = await crypto.subtle.importKey(\n    \"pkcs8\",\n    pkcs8,\n    { name: \"RSASSA-PKCS1-v1_5\", hash: \"SHA-256\" },\n    false,\n    [\"sign\"]\n  );\n  const sig = await crypto.subtle.sign({ name: \"RSASSA-PKCS1-v1_5\" }, key, enc.encode(message));\n  const jwt = `${message}.${base64UrlEncode(sig)}`;\n\n  const body = new URLSearchParams({\n    grant_type: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n    assertion: jwt,\n  });\n  const res = await fetch(\"https://oauth2.googleapis.com/token\", {\n    method: \"POST\",\n    headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\n    body,\n  });\n  if (!res.ok) {\n    const text = await res.text();\n    throw new Error(`Google token error: ${res.status} ${text}`);\n  }\n  const json = await res.json();\n  return json.access_token as string;\n}\n\n", "import type { EntryRow, Bucket } from \"../sheets\";\nimport { formatWeekPath } from \"../utils/time\";\n\nexport type WeekDigest = {\n  year: number;\n  week: number;\n  entries: EntryRow[];\n};\n\ntype DayGroup = Record<string, Record<Bucket, EntryRow[]>>; // YYYY-MM-DD -> bucket -> rows\n\nexport function groupByDayAndBucket(entries: EntryRow[]): DayGroup {\n  const out: DayGroup = {} as DayGroup;\n  for (const e of entries) {\n    const day = e.date; // expected YYYY-MM-DD ET-local\n    if (!out[day]) out[day] = { music: [], video: [], article: [], tweet: [], other: [] } as Record<Bucket, EntryRow[]>;\n    // guard bucket\n    const b = (e.bucket ?? \"other\") as Bucket;\n    if (!out[day][b]) out[day][b] = [];\n    out[day][b].push(e);\n  }\n  return out;\n}\n\nexport function renderDigestHTML(d: WeekDigest): string {\n  console.log(`renderDigestHTML: Rendering week ${d.year}-${d.week} with ${d.entries.length} entries`);\n  const weekPath = `${String(d.year)}-${String(d.week).padStart(2, \"0\")}`;\n  const grouped = groupByDayAndBucket(d.entries);\n  const days = weekDaysET(d); // Mon..Sun list of YYYY-MM-DD strings\n  console.log(`renderDigestHTML: Week days: ${JSON.stringify(days)}`);\n  console.log(`renderDigestHTML: Grouped days: ${JSON.stringify(Object.keys(grouped))}`);\n  const esc = (s: string) => (s ?? \"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n  let body = \"\";\n  for (const day of days) {\n    const buckets = grouped[day];\n    const bucketEntryCount = buckets ? Object.values(buckets).reduce((sum, arr) => sum + arr.length, 0) : 0;\n    console.log(`renderDigestHTML: Day ${day} has ${bucketEntryCount} entries`);\n    body += `<section class=\"day\"><h2>${day}</h2>`;\n    if (!buckets) {\n      body += `<p class=\"empty\">No entries</p>`;\n    } else {\n      for (const bucket of [\"music\", \"video\", \"article\", \"tweet\", \"other\"] as Bucket[]) {\n        const list = buckets[bucket] || [];\n        if (!list.length) continue;\n        body += `<h3 class=\"bucket\">${bucketLabel(bucket)}</h3><ul>`;\n        for (const e of list) {\n          const title = esc(e.title || e.url || \"(untitled)\");\n          const url = esc(e.url || \"#\");\n          const notes = esc(e.notes || \"\");\n          body += `<li><a href=\"${url}\" rel=\"noopener noreferrer\">${title}</a>${notes ? ` \u2014 ${notes}` : \"\"}</li>`;\n        }\n        body += `</ul>`;\n      }\n    }\n    body += `</section>`;\n  }\n\n  return `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Media Consumed \u2014 Week ${weekPath}</title>\n  <meta name=\"description\" content=\"Weekly media consumed by Lawrence, grouped by day and bucket.\">\n  <link rel=\"stylesheet\" href=\"/consumed/style.css\">\n</head>\n<body>\n  <header class=\"site-header\">\n    <h1>Media Consumed \u2014 Week ${weekPath}</h1>\n  </header>\n  <main class=\"container\">\n    ${body}\n  </main>\n</body>\n</html>`;\n}\n\nfunction bucketLabel(b: Bucket): string {\n  switch (b) {\n    case \"music\":\n      return \"Music\";\n    case \"video\":\n      return \"Video\";\n    case \"article\":\n      return \"Articles\";\n    case \"tweet\":\n      return \"Tweets\";\n    default:\n      return \"Other\";\n  }\n}\n\n// Build the seven ET-local dates (YYYY-MM-DD) for the specified ISO week\nfunction weekDaysET(d: WeekDigest): string[] {\n  const monday = isoWeekToDateET(d.year, d.week); // Date at Monday 00:00 ET\n  const out: string[] = [];\n  for (let i = 0; i < 7; i++) {\n    const dt = new Date(monday.getTime());\n    dt.setDate(dt.getDate() + i);\n    out.push(dt.toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" }));\n  }\n  return out;\n}\n\nfunction isoWeekToDateET(year: number, week: number): Date {\n  // Start from Jan 4th, which is always in week 1\n  const jan4 = new Date(Date.UTC(year, 0, 4));\n  const day = jan4.getUTCDay() || 7; // 1..7\n  const mondayUTC = new Date(jan4);\n  mondayUTC.setUTCDate(jan4.getUTCDate() - day + 1 + (week - 1) * 7);\n  // Convert to ET-local wall time for midnight of that day\n  const etString = mondayUTC.toLocaleString(\"en-US\", { timeZone: \"America/New_York\" });\n  return new Date(etString);\n}\n\n", "import type { Env } from \"../sheets\";\n\ntype CommitFile = { path: string; content: string };\n\nexport async function commitFilesToGitHub(env: Env & { GITHUB_TOKEN?: string; CF_API_TOKEN?: string; CF_ACCOUNT_ID?: string; CF_PAGES_PROJECT_NAME?: string }, message: string, files: CommitFile[]): Promise<Response> {\n  if (!env.GITHUB_TOKEN) {\n    return new Response(\"GITHUB_TOKEN not configured; cannot push to repo\", { status: 501 });\n  }\n  const [owner, repo] = env.PUBLIC_REPO.split(\"/\");\n  const branch = env.PUBLIC_REPO_BRANCH || \"main\";\n\n  // Strategy: Use Contents API for simpler, per-file commits\n  // This is safer and more reliable than Git Data API in Workers\n  const api = \"https://api.github.com\";\n  const auth = { Authorization: `Bearer ${env.GITHUB_TOKEN}`, \"Content-Type\": \"application/json\", \"User-Agent\": \"consumed-backend\" } as const;\n\n  const results: Response[] = [];\n\n  for (const file of files) {\n    try {\n      // 1) Get current file SHA if it exists\n      let existingSha: string | undefined;\n      const getRes = await fetch(`${api}/repos/${owner}/${repo}/contents/${file.path}?ref=${branch}`, { headers: auth });\n\n      if (getRes.ok) {\n        const existing = await getRes.json() as any;\n        existingSha = existing.sha;\n      } else if (getRes.status !== 404) {\n        // Error other than \"file not found\"\n        results.push(getRes);\n        continue;\n      }\n\n      // 2) Create or update file\n      const content = btoa(unescape(encodeURIComponent(file.content))); // Base64 encode UTF-8\n      const putBody: any = {\n        message: `${message} - ${file.path}`,\n        content,\n        branch\n      };\n\n      if (existingSha) {\n        putBody.sha = existingSha;\n      }\n\n      const putRes = await fetch(`${api}/repos/${owner}/${repo}/contents/${file.path}`, {\n        method: \"PUT\",\n        headers: auth,\n        body: JSON.stringify(putBody),\n      });\n\n      results.push(putRes);\n\n      if (!putRes.ok) {\n        console.error(`Failed to commit ${file.path}:`, await putRes.text());\n      }\n\n    } catch (err) {\n      console.error(`Error committing ${file.path}:`, err);\n      results.push(new Response(`Error: ${err}`, { status: 500 }));\n    }\n  }\n\n  // Check if all commits succeeded\n  const failed = results.filter(r => !r.ok);\n  if (failed.length > 0) {\n    return new Response(`${failed.length} of ${files.length} file commits failed`, { status: 207 }); // Multi-status\n  }\n\n  // Trigger Cloudflare Pages deployment to ensure immediate rebuild\n  try {\n    await triggerCloudflareDeployment(env);\n  } catch (err) {\n    console.warn(\"Failed to trigger Cloudflare deployment:\", err);\n  }\n\n  return new Response(`Successfully committed ${files.length} files`, { status: 200 });\n}\n\nasync function triggerCloudflareDeployment(env: { CF_API_TOKEN?: string; CF_ACCOUNT_ID?: string; CF_PAGES_PROJECT_NAME?: string }): Promise<void> {\n  // Use Direct Upload API to deploy the built site\n  if (!env.CF_API_TOKEN || !env.CF_ACCOUNT_ID || !env.CF_PAGES_PROJECT_NAME) {\n    console.log(\"Direct upload not configured - GitHub commit only\");\n    return;\n  }\n\n  try {\n    // Trigger a new deployment via Cloudflare API\n    const response = await fetch(\n      `https://api.cloudflare.com/client/v4/accounts/${env.CF_ACCOUNT_ID}/pages/projects/${env.CF_PAGES_PROJECT_NAME}/deployments`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${env.CF_API_TOKEN}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"source\": {\n            \"type\": \"github\",\n            \"config\": {\n              \"production_branch\": \"master\",\n              \"build_command\": \"npm run build\",\n              \"destination_dir\": \"dist\"\n            }\n          }\n        })\n      }\n    );\n\n    if (response.ok) {\n      const result = await response.json();\n      console.log(\"Successfully triggered Cloudflare Pages deployment:\", result.result?.id);\n    } else {\n      console.error(\"Direct deployment failed:\", response.status, await response.text());\n    }\n  } catch (err) {\n    console.error(\"Error triggering direct deployment:\", err);\n  }\n}\n\n// Helper function to encode content as base64 (GitHub Contents API requirement)\nfunction encodeBase64(content: string): string {\n  try {\n    // Use TextEncoder for proper UTF-8 encoding, then convert to base64\n    const encoder = new TextEncoder();\n    const bytes = encoder.encode(content);\n    return btoa(String.fromCharCode(...bytes));\n  } catch {\n    // Fallback for older environments\n    return btoa(unescape(encodeURIComponent(content)));\n  }\n}\n\n", "import type { Env, EntryRow } from \"../sheets\";\nimport { renderDigestHTML } from \"./html\";\nimport { commitFilesToGitHub } from \"./github\";\n\nexport async function publishWeek(env: Env & { GITHUB_TOKEN?: string }, year: number, week: number, rows: EntryRow[]) {\n  const html = renderDigestHTML({ year, week, entries: rows });\n  const ww = String(week).padStart(2, \"0\");\n  // Build/refresh index page by listing existing weeks in the repo and adding this one\n  const weeks = await listWeeksFromRepo(env);\n  if (!weeks.includes(`${year}-${ww}`)) weeks.push(`${year}-${ww}`);\n  const weeksSorted = weeks.filter(x => /^\\d{4}-\\d{2}$/.test(x)).sort((a,b) => b.localeCompare(a));\n  const indexHtml = renderIndexHTML(weeksSorted);\n  const files = [\n    { path: `public/consumed/${year}-${ww}/index.html`, content: html },\n    { path: `public/consumed/index.html`, content: indexHtml },\n  ];\n  const res = await commitFilesToGitHub(env, `Publish consumed week ${year}-${ww}`, files);\n  return res;\n}\n\nasync function listWeeksFromRepo(env: Env & { GITHUB_TOKEN?: string }): Promise<string[]> {\n  const token = env.GITHUB_TOKEN;\n  if (!token) return [];\n  const [owner, repo] = env.PUBLIC_REPO.split(\"/\");\n  const branch = env.PUBLIC_REPO_BRANCH || \"main\";\n  const api = `https://api.github.com/repos/${owner}/${repo}/contents/public/consumed?ref=${encodeURIComponent(branch)}`;\n  const res = await fetch(api, { headers: { Authorization: `Bearer ${token}`, \"User-Agent\": \"consumed-backend\" } });\n  if (!res.ok) return [];\n  const json: any[] = await res.json();\n  const dirs = json.filter(x => x.type === \"dir\").map(x => x.name as string);\n  return dirs;\n}\n\nfunction renderIndexHTML(weeks: string[]): string {\n  const items = weeks.map(w => `<li><a href=\"/consumed/${w}/\">Week ${w}</a></li>`).join(\"\");\n  return `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Media Consumed \u2014 Index</title>\n  <link rel=\"stylesheet\" href=\"/consumed/style.css\">\n</head>\n<body>\n  <header class=\"site-header\"><h1>Media Consumed \u2014 Index</h1></header>\n  <main class=\"container\">\n    <section class=\"day\">\n      <h2>Weeks</h2>\n      <ul>${items}</ul>\n    </section>\n  </main>\n</body>\n</html>`;\n}\n", "export async function sha256Hex(input: string): Promise<string> {\n  const enc = new TextEncoder();\n  const data = enc.encode(input);\n  const hash = await crypto.subtle.digest(\"SHA-256\", data);\n  const bytes = Array.from(new Uint8Array(hash));\n  return bytes.map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\n", "import type { Env, EntryRow } from \"../sheets\";\nimport { nowInNY } from \"../utils/time\";\nimport { sha256Hex } from \"../utils/hash\";\n\nexport async function ingestLastFm(env: Env): Promise<EntryRow[]> {\n  try {\n    const api = \"https://ws.audioscrobbler.com/2.0/\";\n    const url = `${api}?method=user.getrecenttracks&user=${encodeURIComponent(env.LASTFM_USER)}&api_key=${encodeURIComponent(env.LASTFM_API_KEY)}&format=json&limit=200`;\n    console.log(\"Last.fm API URL:\", url);\n\n    const res = await fetch(url);\n    console.log(\"Last.fm API response status:\", res.status);\n    if (!res.ok) {\n      console.log(\"Last.fm API failed:\", res.statusText);\n      return [];\n    }\n\n    const json: any = await res.json();\n    console.log(\"Last.fm API response keys:\", Object.keys(json));\n\n    const tracks: any[] = json?.recenttracks?.track || [];\n    console.log(\"Last.fm tracks found:\", tracks.length);\n\n    if (!Array.isArray(tracks)) {\n      console.log(\"Tracks is not an array:\", tracks);\n      return [];\n    }\n\n    const out: EntryRow[] = [];\n    for (const t of tracks) {\n      console.log(\"Processing track object:\", JSON.stringify(t, null, 2));\n      \n      const date = t?.date?.uts ? Number(t.date.uts) : null;\n      console.log(`Track: ${t?.artist?.[\"#text\"]} - ${t?.name}, date:`, date);\n      \n      if (!date) {\n        console.log(\"Skipping - no date (now playing)\");\n        continue;\n      }\n      \n      const artist = t?.artist?.[\"#text\"] || \"\";\n      const name = t?.name || \"\";\n      const title = `${artist} \u2014 ${name}`.trim();\n      const url = t?.url || \"\";\n      const etDate = new Date(date * 1000).toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" });\n      console.log(\"Creating hash for:\", `${artist}|${name}|${date}`);\n      const id = await sha256Hex(`${artist}|${name}|${date}`);\n      const nowIso = new Date().toISOString();\n      \n      console.log(\"Adding track to output:\", title);\n      out.push({\n        id,\n        date: etDate,\n        bucket: \"music\",\n        title,\n        url,\n        source: \"lastfm\",\n        notes: \"\",\n        is_public: true,\n        created_at: nowIso,\n        updated_at: nowIso,\n      });\n    }\n    console.log(\"Final output rows:\", out.length);\n    return out;\n  } catch (error) {\n    console.error(\"Error in ingestLastFm:\", error);\n    return [];\n  }\n}\n", "import type { Env, EntryRow } from \"../sheets\";\nimport { nowInNY } from \"../utils/time\";\n\nexport async function ingestYouTubeLikes(env: Env): Promise<EntryRow[]> {\n  const token = await getYouTubeAccessToken(env);\n  if (!token) return [];\n  let likesId = await env.RUN_STATUS.get(\"yt:likes_playlist_id\");\n  if (!likesId) {\n    likesId = await fetchLikesPlaylistId(token);\n    if (likesId) await env.RUN_STATUS.put(\"yt:likes_playlist_id\", likesId);\n  }\n  if (!likesId) return [];\n\n  const since = await env.RUN_STATUS.get(\"yt:last_liked_at\");\n  const items = await fetchAllLikedItems(token, likesId);\n  const nowIso = new Date().toISOString();\n  let maxLiked = since || \"\";\n  const out: EntryRow[] = [];\n  for (const it of items) {\n    const videoId = it.snippet?.resourceId?.videoId;\n    const likedAt = it.snippet?.publishedAt; // when added to playlist\n    const title = it.snippet?.title || \"(untitled)\";\n    if (!videoId || !likedAt) continue;\n    if (since && likedAt <= since) continue;\n    const id = `youtube:${videoId}|${likedAt}`;\n    const etDate = new Date(likedAt).toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" });\n    out.push({\n      id,\n      date: etDate,\n      bucket: \"video\",\n      title,\n      url: `https://www.youtube.com/watch?v=${videoId}`,\n      source: \"youtube\",\n      notes: \"\",\n      is_public: true,\n      created_at: nowIso,\n      updated_at: nowIso,\n    });\n    if (likedAt > maxLiked) maxLiked = likedAt;\n  }\n  if (out.length && maxLiked) await env.RUN_STATUS.put(\"yt:last_liked_at\", maxLiked);\n  return out;\n}\n\nasync function getYouTubeAccessToken(env: Env): Promise<string | null> {\n  const refreshToken = await env.RUN_STATUS.get(\"yt:refresh_token\");\n  if (!refreshToken) return null;\n  const body = new URLSearchParams({\n    grant_type: \"refresh_token\",\n    refresh_token: refreshToken,\n    client_id: env.YOUTUBE_CLIENT_ID,\n    client_secret: env.YOUTUBE_CLIENT_SECRET,\n  });\n  const res = await fetch(\"https://oauth2.googleapis.com/token\", {\n    method: \"POST\",\n    headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\n    body,\n  });\n  if (!res.ok) return null;\n  const json = await res.json();\n  return json.access_token as string;\n}\n\nasync function fetchLikesPlaylistId(token: string): Promise<string | null> {\n  const res = await fetch(\"https://www.googleapis.com/youtube/v3/channels?mine=true&part=contentDetails\", {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  if (!res.ok) return null;\n  const json: any = await res.json();\n  const likes = json?.items?.[0]?.contentDetails?.relatedPlaylists?.likes;\n  return likes || null;\n}\n\nasync function fetchAllLikedItems(token: string, playlistId: string): Promise<any[]> {\n  const out: any[] = [];\n  let pageToken: string | undefined;\n  for (let i = 0; i < 10; i++) { // safety cap\n    const url = new URL(\"https://www.googleapis.com/youtube/v3/playlistItems\");\n    url.searchParams.set(\"part\", \"snippet,contentDetails\");\n    url.searchParams.set(\"playlistId\", playlistId);\n    url.searchParams.set(\"maxResults\", \"50\");\n    if (pageToken) url.searchParams.set(\"pageToken\", pageToken);\n    const res = await fetch(url.toString(), { headers: { Authorization: `Bearer ${token}` } });\n    if (!res.ok) break;\n    const json: any = await res.json();\n    out.push(...(json.items || []));\n    pageToken = json.nextPageToken;\n    if (!pageToken) break;\n  }\n  return out;\n}\n\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\Lawrence.work\\\\Desktop\\\\Projects\\\\lnara.com\\\\consumed-backend\\\\.wrangler\\\\tmp\\\\bundle-buFmFx\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\Lawrence.work\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\Lawrence.work\\\\Desktop\\\\Projects\\\\lnara.com\\\\consumed-backend\\\\.wrangler\\\\tmp\\\\bundle-buFmFx\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\Lawrence.work\\\\Desktop\\\\Projects\\\\lnara.com\\\\consumed-backend\\\\.wrangler\\\\tmp\\\\bundle-buFmFx\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\Lawrence.work\\\\Desktop\\\\Projects\\\\lnara.com\\\\consumed-backend\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\Lawrence.work\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\Lawrence.work\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\Lawrence.work\\\\Desktop\\\\Projects\\\\lnara.com\\\\consumed-backend\\\\src\\\\index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { setCookie, parseCookies, makeSessionCookie, verifySessionCookie } from \"./utils/cookie\";\nimport { nowInNY, formatWeekPath } from \"./utils/time\";\nimport type { Env } from \"./sheets\";\nimport { SheetsClient } from \"./sheets\";\nimport { publishWeek } from \"./publish/index\";\n\n// Simple router\nexport default {\n  async fetch(req: Request, env: Env, ctx: ExecutionContext) {\n    const url = new URL(req.url);\n    const path = url.pathname;\n    const method = req.method.toUpperCase();\n\n    // Cron trigger will call scheduled(); fetch handles HTTP only\n    if (path === \"/\" || path === \"/health\") {\n      return new Response(\"ok\", { status: 200 });\n    }\n\n    if (path === \"/test-publish\" && method === \"POST\") {\n      const url = new URL(req.url);\n      const week = url.searchParams.get(\"week\");\n      if (!week || !/^\\d{4}-\\d{2}$/.test(week)) {\n        return new Response(\"Invalid week format\", { status: 400 });\n      }\n      const [year, weekNum] = week.split(\"-\").map(Number);\n      try {\n        const sheets = new SheetsClient(env);\n        const rows = await sheets.listRowsForIsoWeek(year, weekNum);\n        const publicRows = rows.filter(r => r.is_public);\n        console.log(`Publishing ${publicRows.length} entries for week ${week}`);\n        const result = await publishWeek(env, year, weekNum, publicRows);\n        console.log(`Successfully published week ${week} with ${publicRows.length} entries`);\n        return new Response(`Published week ${week} with ${publicRows.length} entries`);\n      } catch (error) {\n        console.error(\"Publish error:\", error);\n        return new Response(`Error: ${error}`, { status: 500 });\n      }\n    }\n\n    // Authenticated routes start with /draft/consumed or /api or /publish\n    const isAuthed = await authenticate(req, env);\n\n    // YouTube OAuth flow (one time setup)\n    if (path === \"/oauth/youtube/start\" && method === \"GET\") {\n      if (!isAuthed) return new Response(\"Unauthorized\", { status: 401 });\n      const origin = `${url.protocol}//${url.host}`;\n      const redirect = `${origin}/oauth/youtube/callback`;\n      const authUrl = new URL(\"https://accounts.google.com/o/oauth2/v2/auth\");\n      authUrl.searchParams.set(\"client_id\", env.YOUTUBE_CLIENT_ID);\n      authUrl.searchParams.set(\"redirect_uri\", redirect);\n      authUrl.searchParams.set(\"response_type\", \"code\");\n      authUrl.searchParams.set(\"access_type\", \"offline\");\n      authUrl.searchParams.set(\"prompt\", \"consent\");\n      authUrl.searchParams.set(\"scope\", \"https://www.googleapis.com/auth/youtube.readonly\");\n      return Response.redirect(authUrl.toString(), 302);\n    }\n    if (path === \"/oauth/youtube/callback\" && method === \"GET\") {\n      if (!isAuthed) return new Response(\"Unauthorized\", { status: 401 });\n      const code = url.searchParams.get(\"code\");\n      if (!code) return new Response(\"Missing code\", { status: 400 });\n      const origin = `${url.protocol}//${url.host}`;\n      const redirect = `${origin}/oauth/youtube/callback`;\n      const body = new URLSearchParams({\n        code,\n        client_id: env.YOUTUBE_CLIENT_ID,\n        client_secret: env.YOUTUBE_CLIENT_SECRET,\n        redirect_uri: redirect,\n        grant_type: \"authorization_code\",\n      });\n      const tokenRes = await fetch(\"https://oauth2.googleapis.com/token\", {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\n        body,\n      });\n      const payload = await tokenRes.json<any>();\n      const refresh = payload?.refresh_token;\n      if (refresh) await env.RUN_STATUS.put(\"yt:refresh_token\", refresh);\n      const html = `<!doctype html><meta charset='utf-8'><title>YouTube connected</title><body style='font-family:system-ui;max-width:800px;margin:10vh auto;padding:16px'><h1>YouTube Connected</h1><p>Refresh token ${refresh ? \"stored\" : \"NOT received\"}. You can close this window.</p><p><a href='/draft/consumed'>&larr; Back to dashboard</a></p>`;\n      return new Response(html, { headers: { \"content-type\": \"text/html; charset=utf-8\" } });\n    }\n\n    if (path === \"/draft/consumed\" && method === \"GET\") {\n      if (!isAuthed) return loginPage();\n      return dashboardPage(env);\n    }\n\n    if (path === \"/api/login\" && method === \"POST\") {\n      const form = await req.formData();\n      const password = String(form.get(\"password\") || \"\");\n      if (!password || password !== env.DASHBOARD_PASSWORD) {\n        return new Response(\"Invalid password\", { status: 401 });\n      }\n      const cookieVal = await makeSessionCookie({ u: \"admin\", t: Date.now() }, env.SESSION_SECRET);\n      const headers = new Headers({ Location: \"/draft/consumed\" });\n      headers.append(\"Set-Cookie\", setCookie(\"sess\", cookieVal, { httpOnly: true, path: \"/\", sameSite: \"Lax\", secure: true, maxAge: 60 * 60 * 8 }));\n      return new Response(null, { status: 302, headers });\n    }\n\n    if (!isAuthed) return new Response(\"Unauthorized\", { status: 401 });\n\n    if (path === \"/api/ingest\" && method === \"POST\") {\n      const { ingestLastFm } = await import(\"./ingest/lastfm\");\n      const { ingestYouTubeLikes } = await import(\"./ingest/youtube\");\n      const sheets = new SheetsClient(env);\n      const [lfm, yt] = await Promise.allSettled([ingestLastFm(env), ingestYouTubeLikes(env)]);\n      const rows: any[] = [];\n      if (lfm.status === \"fulfilled\") rows.push(...lfm.value);\n      if (yt.status === \"fulfilled\") rows.push(...yt.value);\n      if (rows.length) await sheets.appendRows(rows as any);\n      return new Response(`Ingested ${rows.length} rows`, { status: 200 });\n    }\n\n    if (path === \"/api/entries\" && method === \"POST\") {\n      try {\n        const form = await req.formData();\n        const bucket = String(form.get(\"bucket\") || \"other\");\n        const title = String(form.get(\"title\") || \"\").trim();\n        const urlf = String(form.get(\"url\") || \"\").trim();\n        const notes = String(form.get(\"notes\") || \"\").trim();\n        const date = String(form.get(\"date\") || new Date().toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" }));\n\n        // Validation\n        if (!title) {\n          return new Response(\"Title is required\", { status: 400 });\n        }\n        if (![\"music\", \"video\", \"article\", \"tweet\", \"other\"].includes(bucket)) {\n          return new Response(\"Invalid bucket type\", { status: 400 });\n        }\n        if (urlf && !isValidUrl(urlf)) {\n          return new Response(\"Invalid URL format\", { status: 400 });\n        }\n\n        const { sha256Hex } = await import(\"./utils/hash\");\n        const id = await sha256Hex(`manual|${title}|${urlf}|${date}|${Date.now()}`);\n        const nowIso = new Date().toISOString();\n        const row = { id, date, bucket: bucket as any, title, url: urlf, source: \"manual\", notes, is_public: true, created_at: nowIso, updated_at: nowIso };\n        const sheets = new SheetsClient(env);\n        await sheets.appendRows([row]);\n        return new Response(\"Entry added successfully\", { status: 200 });\n      } catch (err) {\n        console.error(\"Error adding entry:\", err);\n        return new Response(\"Failed to add entry\", { status: 500 });\n      }\n    }\n\n    if (path.startsWith(\"/api/entries/\") && method === \"POST\") {\n      const rawId = path.split(\"/\").pop()!;\n      let form: FormData | null = null;\n\n      try {\n        if (!rawId) {\n          return new Response(\"Entry ID is required\", { status: 400 });\n        }\n\n        // Decode the URL-encoded ID to match what's stored in the sheet\n        const id = decodeURIComponent(rawId);\n        console.log(`Raw ID: ${rawId}, Decoded ID: ${id}`);\n\n        form = await req.formData();\n        const notes = form.has(\"notes\") ? String(form.get(\"notes\") || \"\").trim() : undefined;\n        const isPublic = form.has(\"is_public\") ? String(form.get(\"is_public\")) : undefined;\n\n        console.log(`Updating entry ${id} with notes: \"${notes?.substring(0, 50)}...\" is_public: ${isPublic}`);\n\n        const sheets = new SheetsClient(env);\n        await sheets.updateRow(id, {\n          notes,\n          is_public: typeof isPublic === \"string\" ? isPublic === \"true\" : undefined\n        });\n\n        console.log(`Successfully updated entry ${id}`);\n        return new Response(\"Entry updated successfully\", { status: 200 });\n      } catch (err) {\n        console.error(\"Error updating entry:\", {\n          error: err.message,\n          stack: err.stack,\n          rawId,\n          decodedId: rawId ? decodeURIComponent(rawId) : \"null\",\n          notes: form?.has(\"notes\") ? String(form.get(\"notes\") || \"\").substring(0, 100) : \"no notes\",\n          isPublic: form?.has(\"is_public\") ? String(form.get(\"is_public\")) : \"no is_public\",\n          hasSheetId: !!env.SHEETS_ID,\n          hasServiceAccount: !!env.GOOGLE_SERVICE_ACCOUNT_JSON\n        });\n        return new Response(`Failed to update entry: ${err.message}`, { status: 500 });\n      }\n    }\n\n    if (path.startsWith(\"/publish/week\") && method === \"POST\") {\n      try {\n        const week = url.searchParams.get(\"week\");\n        const ww = week ?? formatWeekPath(nowInNY());\n        const [y, w] = ww.split(\"-\");\n        const year = Number(y);\n        const wk = Number(w);\n\n        console.log(`Publishing week ${ww} (year: ${year}, week: ${wk})`);\n\n        if (!year || !wk || year < 2020 || year > 2030 || wk < 1 || wk > 53) {\n          return new Response(\"Invalid week format. Expected YYYY-WW\", { status: 400 });\n        }\n\n        const sheets = new SheetsClient(env);\n        const rowsAll = await sheets.listRowsForIsoWeek(year, wk);\n        console.log(`Retrieved ${rowsAll.length} total entries for week ${ww}`);\n\n        const rows = rowsAll.filter(r => r.is_public);\n        console.log(`Found ${rows.length} public entries out of ${rowsAll.length} total for week ${ww}`);\n\n        if (rows.length === 0) {\n          console.log(`No public entries found for week ${ww} - returning 404`);\n          return new Response(`No public entries found for week ${ww}`, { status: 404 });\n        }\n\n        console.log(`Publishing ${rows.length} entries for week ${ww}`);\n        const { publishWeek } = await import(\"./publish/index\");\n        const res = await publishWeek(env as any, year, wk, rows as any);\n        if (!res.ok) return res;\n        console.log(`Successfully published week ${ww} with ${rows.length} entries`);\n        return new Response(`Published week ${ww} with ${rows.length} entries`, { status: 200 });\n      } catch (err) {\n        console.error(\"Error publishing week:\", err);\n        return new Response(\"Failed to publish week\", { status: 500 });\n      }\n    }\n\n    return new Response(\"Not found\", { status: 404 });\n  },\n\n  async scheduled(event: ScheduledEvent, env: Env, ctx: ExecutionContext) {\n    // Run around 03:00\u201304:00 UTC only if local NY time is 23:00 and not processed today\n    const ny = nowInNY();\n    const yyyyMmDd = ny.toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" });\n    const hour = ny.getHours();\n    if (hour !== 23) return; // gate to 11 PM ET\n\n    const key = `last-run-${yyyyMmDd}`;\n    const already = await env.RUN_STATUS.get(key);\n    if (already) return;\n\n    const { ingestLastFm } = await import(\"./ingest/lastfm\");\n    const { ingestYouTubeLikes } = await import(\"./ingest/youtube\");\n    const sheets = new SheetsClient(env);\n    const [lfm, yt] = await Promise.allSettled([ingestLastFm(env), ingestYouTubeLikes(env)]);\n    const rows: any[] = [];\n    if (lfm.status === \"fulfilled\") rows.push(...lfm.value);\n    if (yt.status === \"fulfilled\") rows.push(...yt.value);\n    if (rows.length) await sheets.appendRows(rows as any);\n    await env.RUN_STATUS.put(key, \"1\", { expirationTtl: 60 * 60 * 20 });\n  },\n};\n\nasync function authenticate(req: Request, env: Env): Promise<boolean> {\n  const cookies = parseCookies(req.headers.get(\"Cookie\"));\n  const sess = cookies[\"sess\"];\n  if (!sess) return false;\n  const payload = await verifySessionCookie(sess, env.SESSION_SECRET);\n  return !!payload;\n}\n\nfunction loginPage(): Response {\n  const html = `<!doctype html>\n<html lang=\"en\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<meta name=\"robots\" content=\"noindex,nofollow\">\n<title>Login \u00B7 Consumed Draft</title>\n<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;max-width:420px;margin:10vh auto;padding:0 16px;color:#111}form{display:flex;gap:8px}input[type=password]{flex:1;padding:10px;border:1px solid #ccc;border-radius:6px}button{padding:10px 16px;border:0;border-radius:6px;background:#111;color:#fff;cursor:pointer}</style>\n</head><body>\n  <h1>Consumed \u00B7 Draft Login</h1>\n  <form method=\"post\" action=\"/api/login\">\n    <input type=\"password\" name=\"password\" placeholder=\"Password\" autocomplete=\"current-password\" required>\n    <button type=\"submit\">Login</button>\n  </form>\n</body></html>`;\n  return new Response(html, { status: 200, headers: { \"content-type\": \"text/html; charset=utf-8\" } });\n}\n\nasync function dashboardPage(env: Env): Promise<Response> {\n  const ny = nowInNY();\n  const week = formatWeekPath(ny);\n\n  // Fetch last 7 days of data\n  const sheets = new SheetsClient(env);\n  let entries: any[] = [];\n  try {\n    console.log(\"Fetching entries from Google Sheets...\");\n    entries = await sheets.listRowsSince(7);\n    console.log(`Retrieved ${entries.length} entries from sheets`);\n    if (entries.length > 0) {\n      console.log(\"Sample entry:\", {\n        id: entries[0].id,\n        title: entries[0].title,\n        is_public: entries[0].is_public,\n        date: entries[0].date\n      });\n    }\n  } catch (err) {\n    console.error(\"Failed to fetch entries:\", {\n      error: err.message,\n      stack: err.stack,\n      hasSheetId: !!env.SHEETS_ID,\n      hasServiceAccount: !!env.GOOGLE_SERVICE_ACCOUNT_JSON\n    });\n  }\n\n  // Group by date, then by bucket\n  const groupedByDate = groupEntriesByDate(entries);\n\n  const html = `<!doctype html>\n<html lang=\"en\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<meta name=\"robots\" content=\"noindex,nofollow\">\n<title>Consumed \u00B7 Draft</title>\n<style>\nbody{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;max-width:1200px;margin:2vh auto;padding:0 16px;color:#111;line-height:1.5}\nheader{display:flex;justify-content:space-between;align-items:center;margin-bottom:24px;flex-wrap:wrap;gap:16px}\n.bulk-controls{background:#f8f9fa;border:1px solid #e0e0e0;border-radius:8px;padding:16px;margin-bottom:24px}\n.bulk-controls h3{margin:0 0 12px 0;font-size:16px}\n.bulk-actions{display:flex;gap:12px;align-items:center;flex-wrap:wrap}\n.bulk-btn{padding:8px 16px;border:1px solid #ddd;border-radius:6px;background:#fff;color:#333;cursor:pointer;font-size:14px}\n.bulk-btn.primary{background:#007bff;color:#fff;border-color:#007bff}\n.bulk-btn:hover{background:#f8f9fa}\n.bulk-btn.primary:hover{background:#0056b3}\n.bulk-btn:disabled{opacity:0.6;cursor:not-allowed}\n.bulk-btn:disabled:hover{background:inherit}\n.status-summary{font-size:14px;color:#666;margin-left:auto}\n.save-status{position:fixed;top:20px;right:20px;padding:8px 12px;border-radius:4px;font-size:12px;opacity:0;transition:opacity 0.3s}\n.save-status.show{opacity:1}\n.save-status.success{background:#d4edda;color:#155724;border:1px solid #c3e6cb}\n.save-status.error{background:#f8d7da;color:#721c24;border:1px solid #f5c6cb}\n.publish-btn{padding:10px 16px;border:0;border-radius:6px;background:#111;color:#fff;cursor:pointer;font-size:14px;text-decoration:none;display:inline-block}\n.publish-btn:hover{background:#333}\n.day-section{margin:32px 0;border:1px solid #e0e0e0;border-radius:8px;overflow:hidden}\n.day-header{background:#f8f9fa;padding:16px;border-bottom:1px solid #e0e0e0;font-weight:600;font-size:16px}\n.bucket-section{border-bottom:1px solid #f0f0f0}\n.bucket-section:last-child{border-bottom:none}\n.bucket-header{background:#fafbfc;padding:12px 16px;font-weight:500;font-size:14px;color:#666;text-transform:uppercase;letter-spacing:0.5px}\n.entry{padding:16px;border-bottom:1px solid #f8f9fa;display:flex;align-items:flex-start;gap:16px}\n.entry:last-child{border-bottom:none}\n.entry-content{flex:1;min-width:0}\n.entry-title{font-weight:500;margin:0 0 4px 0}\n.entry-title a{color:#111;text-decoration:none}\n.entry-title a:hover{text-decoration:underline}\n.entry-meta{font-size:12px;color:#666;margin-bottom:8px}\n.entry-notes{margin:8px 0}\n.entry-notes textarea{width:100%;padding:8px;border:1px solid #ddd;border-radius:4px;font-size:13px;font-family:inherit;resize:vertical;min-height:60px}\n.entry-controls{display:flex;align-items:center;gap:12px;flex-shrink:0}\n.toggle{position:relative;display:inline-block;width:44px;height:24px}\n.toggle input{opacity:0;width:0;height:0}\n.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background:#ccc;border-radius:24px;transition:0.2s}\n.slider:before{position:absolute;content:\"\";height:18px;width:18px;left:3px;bottom:3px;background:white;border-radius:50%;transition:0.2s}\ninput:checked + .slider{background:#2196F3}\ninput:checked + .slider:before{transform:translateX(20px)}\n.toggle-label{font-size:12px;color:#666}\n.add-form{background:#f8f9fa;border-radius:8px;padding:24px;margin:32px 0}\n.form-row{display:flex;gap:16px;margin-bottom:16px;align-items:center;flex-wrap:wrap}\n.form-row label{min-width:80px;font-weight:500;font-size:14px}\n.form-row input, .form-row select, .form-row textarea{padding:8px;border:1px solid #ddd;border-radius:4px;font-size:14px;font-family:inherit}\n.form-row input[type=\"text\"], .form-row input[type=\"url\"]{flex:1;min-width:200px}\n.form-row textarea{flex:1;min-width:200px;resize:vertical;height:60px}\n.form-row select{min-width:120px}\n.add-btn{padding:10px 20px;border:0;border-radius:6px;background:#0066cc;color:#fff;cursor:pointer;font-size:14px}\n.add-btn:hover{background:#0052a3}\n.empty-state{text-align:center;padding:48px 16px;color:#666}\n.ingest-btn{padding:8px 12px;border:1px solid #ddd;border-radius:4px;background:#fff;color:#666;cursor:pointer;font-size:12px;text-decoration:none}\n.ingest-btn:hover{background:#f8f9fa}\n</style>\n</head><body>\n  <header>\n    <h1>Consumed \u00B7 Draft</h1>\n    <div style=\"display:flex;gap:8px;align-items:center;flex-wrap:wrap\">\n      <a class=\"ingest-btn\" href=\"/oauth/youtube/start\">Connect YouTube</a>\n      <form method=\"post\" action=\"/api/ingest\" style=\"display:inline\"><button type=\"submit\" class=\"ingest-btn\">Run Ingest</button></form>\n      <form method=\"post\" action=\"/publish/week?week=${week}\" style=\"display:inline\"><button type=\"submit\" class=\"publish-btn\">Publish Week ${week}</button></form>\n    </div>\n  </header>\n\n  <div class=\"bulk-controls\">\n    <h3>Bulk Actions</h3>\n    <div class=\"bulk-actions\">\n      <button class=\"bulk-btn primary\" onclick=\"bulkSetPublic()\">Mark All Public</button>\n      <button class=\"bulk-btn\" onclick=\"bulkSetPrivate()\">Mark All Private</button>\n      <button class=\"bulk-btn\" onclick=\"bulkSaveNotes()\">Save All Notes</button>\n      <span class=\"status-summary\">\n        <span id=\"public-count\">0</span> public,\n        <span id=\"private-count\">0</span> private,\n        <span id=\"total-count\">0</span> total\n      </span>\n    </div>\n  </div>\n\n  <div class=\"save-status\" id=\"save-status\"></div>\n\n  <div class=\"add-form\">\n    <h2 style=\"margin:0 0 16px 0\">Add Manual Entry</h2>\n    <form method=\"post\" action=\"/api/entries\">\n      <div class=\"form-row\">\n        <label for=\"bucket\">Type:</label>\n        <select name=\"bucket\" id=\"bucket\" required>\n          <option value=\"article\">Article</option>\n          <option value=\"video\">Video</option>\n          <option value=\"tweet\">Tweet</option>\n          <option value=\"music\">Music</option>\n          <option value=\"other\">Other</option>\n        </select>\n        <label for=\"date\">Date:</label>\n        <input type=\"date\" name=\"date\" id=\"date\" value=\"${new Date().toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" })}\" required>\n      </div>\n      <div class=\"form-row\">\n        <label for=\"title\">Title:</label>\n        <input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Entry title\" required>\n      </div>\n      <div class=\"form-row\">\n        <label for=\"url\">URL:</label>\n        <input type=\"url\" name=\"url\" id=\"url\" placeholder=\"https://example.com\">\n      </div>\n      <div class=\"form-row\">\n        <label for=\"notes\">Notes:</label>\n        <textarea name=\"notes\" id=\"notes\" placeholder=\"Optional notes...\"></textarea>\n      </div>\n      <div class=\"form-row\">\n        <label></label>\n        <button type=\"submit\" class=\"add-btn\">Add Entry</button>\n      </div>\n    </form>\n  </div>\n\n  ${renderEntries(groupedByDate)}\n\n  <div class=\"bulk-controls\">\n    <h3>Bulk Actions</h3>\n    <div class=\"bulk-actions\">\n      <button class=\"bulk-btn primary\" onclick=\"bulkSetPublic()\">Mark All Public</button>\n      <button class=\"bulk-btn\" onclick=\"bulkSetPrivate()\">Mark All Private</button>\n      <button class=\"bulk-btn\" onclick=\"bulkSaveNotes()\">Save All Notes</button>\n      <span class=\"status-summary\">\n        <span id=\"public-count-bottom\">0</span> public,\n        <span id=\"private-count-bottom\">0</span> private,\n        <span id=\"total-count-bottom\">0</span> total\n      </span>\n    </div>\n  </div>\n\n  <script>\n    // Auto-save notes on blur\n    document.addEventListener('blur', async (e) => {\n      if (e.target.matches('.entry-notes textarea')) {\n        const id = e.target.dataset.id;\n        const notes = e.target.value;\n        const originalBackground = e.target.style.background;\n\n        try {\n          // Show saving state\n          e.target.style.background = '#fff3cd';\n          e.target.style.borderColor = '#ffc107';\n\n          const form = new FormData();\n          form.append('notes', notes);\n          const response = await fetch('/api/entries/' + id, {\n            method: 'POST',\n            body: form\n          });\n\n          if (response.ok) {\n            // Show success\n            e.target.style.background = '#d4edda';\n            e.target.style.borderColor = '#28a745';\n            setTimeout(() => {\n              e.target.style.background = originalBackground;\n              e.target.style.borderColor = '#ddd';\n            }, 1500);\n          } else {\n            throw new Error('Save failed');\n          }\n        } catch (err) {\n          console.error('Failed to save notes:', err);\n          // Show error\n          e.target.style.background = '#f8d7da';\n          e.target.style.borderColor = '#dc3545';\n          setTimeout(() => {\n            e.target.style.background = originalBackground;\n            e.target.style.borderColor = '#ddd';\n          }, 2000);\n        }\n      }\n    }, true);\n\n    // Handle public/private toggle\n    document.addEventListener('change', async (e) => {\n      if (e.target.matches('.public-toggle')) {\n        const id = e.target.dataset.id;\n        const isPublic = e.target.checked;\n        try {\n          const form = new FormData();\n          form.append('is_public', isPublic.toString());\n          await fetch('/api/entries/' + id, {\n            method: 'POST',\n            body: form\n          });\n        } catch (err) {\n          console.error('Failed to update visibility:', err);\n          e.target.checked = !isPublic; // revert on error\n        }\n      }\n    });\n\n    // Handle form submission with feedback\n    document.querySelector('.add-form form').addEventListener('submit', async (e) => {\n      e.preventDefault();\n      const form = e.target;\n      const button = form.querySelector('button[type=\"submit\"]');\n      const originalText = button.textContent;\n\n      try {\n        button.textContent = 'Adding...';\n        button.disabled = true;\n\n        const response = await fetch(form.action, {\n          method: 'POST',\n          body: new FormData(form)\n        });\n\n        if (response.ok) {\n          form.reset();\n          // Set date to today\n          form.querySelector('[name=\"date\"]').value = new Date().toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" });\n          button.textContent = 'Added!';\n          button.style.background = '#059669';\n          setTimeout(() => {\n            button.textContent = originalText;\n            button.style.background = '';\n            button.disabled = false;\n            form.reset();\n            form.querySelector('[name=\"date\"]').value = new Date().toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" });\n          }, 2000);\n        } else {\n          const error = await response.text();\n          alert('Error: ' + error);\n          button.textContent = originalText;\n          button.disabled = false;\n        }\n      } catch (err) {\n        console.error('Failed to add entry:', err);\n        alert('Failed to add entry. Please try again.');\n        button.textContent = originalText;\n        button.disabled = false;\n      }\n    });\n\n    // Bulk controls functionality\n    function updateStatusSummary() {\n      const publicCount = document.querySelectorAll('.public-toggle:checked').length;\n      const totalCount = document.querySelectorAll('.public-toggle').length;\n      const privateCount = totalCount - publicCount;\n\n      // Update top summary\n      document.getElementById('public-count').textContent = publicCount;\n      document.getElementById('private-count').textContent = privateCount;\n      document.getElementById('total-count').textContent = totalCount;\n\n      // Update bottom summary\n      document.getElementById('public-count-bottom').textContent = publicCount;\n      document.getElementById('private-count-bottom').textContent = privateCount;\n      document.getElementById('total-count-bottom').textContent = totalCount;\n    }\n\n    function showStatus(message, isSuccess = true) {\n      const statusEl = document.getElementById('save-status');\n      statusEl.textContent = message;\n\n      // Set styles immediately\n      statusEl.style.background = isSuccess ? '#d4edda' : '#f8d7da';\n      statusEl.style.color = isSuccess ? '#155724' : '#721c24';\n      statusEl.style.border = isSuccess ? '1px solid #c3e6cb' : '1px solid #f5c6cb';\n      statusEl.style.opacity = '1';\n      statusEl.style.display = 'block';\n\n      // Auto-hide after 4 seconds\n      setTimeout(() => {\n        statusEl.style.opacity = '0';\n        setTimeout(() => { statusEl.style.display = 'none'; }, 300);\n      }, 4000);\n    }\n\n    async function bulkSetPublic() {\n      const toggles = document.querySelectorAll('.public-toggle:not(:checked)');\n      const buttons = document.querySelectorAll('.bulk-btn');\n\n      // Show loading state\n      buttons.forEach(btn => btn.disabled = true);\n      showStatus('Processing ' + toggles.length + ' entries...', true);\n\n      let successCount = 0;\n\n      for (const toggle of toggles) {\n        try {\n          const form = new FormData();\n          form.append('is_public', 'true');\n          await fetch('/api/entries/' + toggle.dataset.id, {\n            method: 'POST',\n            body: form\n          });\n          toggle.checked = true;\n          successCount++;\n        } catch (err) {\n          console.error('Failed to update entry:', err);\n        }\n      }\n\n      // Re-enable buttons\n      buttons.forEach(btn => btn.disabled = false);\n\n      updateStatusSummary();\n      showStatus('\u2705 Updated ' + successCount + ' entries to public');\n    }\n\n    async function bulkSetPrivate() {\n      const toggles = document.querySelectorAll('.public-toggle:checked');\n      const buttons = document.querySelectorAll('.bulk-btn');\n\n      // Show loading state\n      buttons.forEach(btn => btn.disabled = true);\n      showStatus('Processing ' + toggles.length + ' entries...', true);\n\n      let successCount = 0;\n\n      for (const toggle of toggles) {\n        try {\n          const form = new FormData();\n          form.append('is_public', 'false');\n          await fetch('/api/entries/' + toggle.dataset.id, {\n            method: 'POST',\n            body: form\n          });\n          toggle.checked = false;\n          successCount++;\n        } catch (err) {\n          console.error('Failed to update entry:', err);\n        }\n      }\n\n      // Re-enable buttons\n      buttons.forEach(btn => btn.disabled = false);\n\n      updateStatusSummary();\n      showStatus('\u2705 Updated ' + successCount + ' entries to private');\n    }\n\n    async function bulkSaveNotes() {\n      const textareas = document.querySelectorAll('.entry-notes textarea');\n      const buttons = document.querySelectorAll('.bulk-btn');\n\n      // Show loading state\n      buttons.forEach(btn => btn.disabled = true);\n      showStatus('Saving notes for ' + textareas.length + ' entries...', true);\n\n      let successCount = 0;\n\n      for (const textarea of textareas) {\n        try {\n          const form = new FormData();\n          form.append('notes', textarea.value);\n          await fetch('/api/entries/' + textarea.dataset.id, {\n            method: 'POST',\n            body: form\n          });\n          successCount++;\n        } catch (err) {\n          console.error('Failed to save notes:', err);\n        }\n      }\n\n      // Re-enable buttons\n      buttons.forEach(btn => btn.disabled = false);\n\n      showStatus('\u2705 Saved notes for ' + successCount + ' entries');\n    }\n\n    // Initialize status summary on page load\n    document.addEventListener('DOMContentLoaded', updateStatusSummary);\n\n    // Update status when individual toggles change\n    document.addEventListener('change', (e) => {\n      if (e.target.matches('.public-toggle')) {\n        updateStatusSummary();\n      }\n    });\n  </script>\n</body></html>`;\n\n  return new Response(html, { status: 200, headers: { \"content-type\": \"text/html; charset=utf-8\" } });\n}\n\nfunction groupEntriesByDate(entries: any[]): Map<string, Map<string, any[]>> {\n  const grouped = new Map<string, Map<string, any[]>>();\n\n  console.log(`groupEntriesByDate: Starting with ${entries.length} entries`);\n  if (entries.length > 0) {\n    console.log(\"Sample entry dates:\", entries.slice(0, 3).map(e => e.date));\n  }\n\n  // Get last 7 days starting from today in NY timezone\n  const today = nowInNY();\n  today.setHours(0, 0, 0, 0);\n\n  const validDates = [];\n  for (let i = 0; i < 7; i++) {\n    const date = new Date(today);\n    date.setDate(today.getDate() - i);\n    const dateStr = date.toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" });\n    grouped.set(dateStr, new Map());\n    validDates.push(dateStr);\n  }\n\n  console.log(\"Valid date keys:\", validDates);\n\n  // Group entries by date and bucket\n  let matchedCount = 0;\n  const unmatchedDates = new Set();\n  for (const entry of entries) {\n    const dateMap = grouped.get(entry.date);\n    if (!dateMap) {\n      unmatchedDates.add(entry.date);\n      continue;\n    }\n\n    matchedCount++;\n    if (!dateMap.has(entry.bucket)) {\n      dateMap.set(entry.bucket, []);\n    }\n    dateMap.get(entry.bucket)!.push(entry);\n  }\n\n  console.log(`groupEntriesByDate: Matched ${matchedCount} out of ${entries.length} entries`);\n  if (unmatchedDates.size > 0) {\n    console.log(\"Unmatched entry dates:\", Array.from(unmatchedDates));\n  }\n  return grouped;\n}\n\nfunction renderEntries(groupedByDate: Map<string, Map<string, any[]>>): string {\n  if (groupedByDate.size === 0) {\n    return '<div class=\"empty-state\"><p>No entries found. Try running the ingest or adding entries manually.</p></div>';\n  }\n\n  const days = Array.from(groupedByDate.keys()).sort().reverse(); // Most recent first\n\n  return days.map(date => {\n    const dayName = new Date(date + 'T12:00:00').toLocaleDateString('en-US', {\n      weekday: 'long',\n      month: 'short',\n      day: 'numeric',\n      timeZone: 'America/New_York'\n    });\n\n    const buckets = groupedByDate.get(date)!;\n    const bucketOrder = ['music', 'video', 'article', 'tweet', 'other'];\n    const bucketsWithEntries = bucketOrder.filter(bucket => buckets.has(bucket) && buckets.get(bucket)!.length > 0);\n\n    if (bucketsWithEntries.length === 0) return '';\n\n    return `\n      <div class=\"day-section\">\n        <div class=\"day-header\">${dayName}</div>\n        ${bucketsWithEntries.map(bucket => {\n          const entries = buckets.get(bucket)!;\n          return `\n            <div class=\"bucket-section\">\n              <div class=\"bucket-header\">${bucket} (${entries.length})</div>\n              ${entries.map(entry => `\n                <div class=\"entry\">\n                  <div class=\"entry-content\">\n                    <h3 class=\"entry-title\">\n                      ${entry.url ? `<a href=\"${escapeHtml(entry.url)}\" target=\"_blank\">${escapeHtml(entry.title)}</a>` : escapeHtml(entry.title)}\n                    </h3>\n                    <div class=\"entry-meta\">${escapeHtml(entry.source)} \u2022 ${entry.date}</div>\n                    <div class=\"entry-notes\">\n                      <textarea data-id=\"${escapeHtml(entry.id)}\" placeholder=\"Add notes...\">${escapeHtml(entry.notes || '')}</textarea>\n                    </div>\n                  </div>\n                  <div class=\"entry-controls\">\n                    <label class=\"toggle\">\n                      <input type=\"checkbox\" class=\"public-toggle\" data-id=\"${escapeHtml(entry.id)}\" ${entry.is_public ? 'checked' : ''}>\n                      <span class=\"slider\"></span>\n                    </label>\n                    <span class=\"toggle-label\">Public</span>\n                  </div>\n                </div>\n              `).join('')}\n            </div>\n          `;\n        }).join('')}\n      </div>\n    `;\n  }).join('');\n}\n\nfunction escapeHtml(text: string): string {\n  return text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction isValidUrl(url: string): boolean {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n", "export type CookieOptions = {\n  path?: string;\n  httpOnly?: boolean;\n  sameSite?: \"Strict\" | \"Lax\" | \"None\";\n  secure?: boolean;\n  maxAge?: number; // seconds\n};\n\nexport function setCookie(name: string, value: string, opts: CookieOptions = {}): string {\n  const parts = [\n    `${name}=${value}`,\n    `Path=${opts.path ?? \"/\"}`,\n    opts.httpOnly ? \"HttpOnly\" : undefined,\n    opts.sameSite ? `SameSite=${opts.sameSite}` : \"SameSite=Lax\",\n    opts.secure ? \"Secure\" : undefined,\n    typeof opts.maxAge === \"number\" ? `Max-Age=${opts.maxAge}` : undefined,\n  ].filter(Boolean);\n  return parts.join(\"; \");\n}\n\nexport function parseCookies(header?: string | null): Record<string, string> {\n  const out: Record<string, string> = {};\n  if (!header) return out;\n  const pairs = header.split(\";\");\n  for (const p of pairs) {\n    const [k, ...rest] = p.split(\"=\");\n    const key = k.trim();\n    const val = rest.join(\"=\").trim();\n    if (key) out[key] = decodeURIComponent(val ?? \"\");\n  }\n  return out;\n}\n\nexport async function hmac(data: string, secret: string): Promise<string> {\n  const enc = new TextEncoder();\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    enc.encode(secret),\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    false,\n    [\"sign\"]\n  );\n  const sig = await crypto.subtle.sign(\"HMAC\", key, enc.encode(data));\n  return btoa(String.fromCharCode(...new Uint8Array(sig)));\n}\n\nexport async function makeSessionCookie(payload: object, secret: string): Promise<string> {\n  const json = JSON.stringify(payload);\n  const body = btoa(unescape(encodeURIComponent(json)));\n  const sig = await hmac(body, secret);\n  return `${body}.${sig}`;\n}\n\nexport async function verifySessionCookie(cookie: string, secret: string): Promise<any | null> {\n  const [body, sig] = cookie.split(\".\");\n  if (!body || !sig) return null;\n  const expected = await hmac(body, secret);\n  if (expected !== sig) return null;\n  try {\n    const json = decodeURIComponent(escape(atob(body)));\n    return JSON.parse(json);\n  } catch {\n    return null;\n  }\n}\n\n", "export function nowInNY(): Date {\n  // America/New_York offset including DST\n  const fmt = new Intl.DateTimeFormat(\"en-US\", {\n    timeZone: \"America/New_York\",\n    hour12: false,\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n  });\n  const parts = Object.fromEntries(\n    // @ts-ignore\n    fmt.formatToParts(new Date()).map(p => [p.type, p.value])\n  );\n  const str = `${parts.year}-${parts.month}-${parts.day}T${parts.hour}:${parts.minute}:${parts.second}-05:00`;\n  // Offset is not always -05:00 (DST). Use Date.toLocaleString with timeZone to extract local components\n  // then construct a date in that local wall time by parsing and adjusting with the current NY offset.\n  const ny = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"America/New_York\" }));\n  return ny;\n}\n\nexport function isoWeek(date: Date): { year: number; week: number } {\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  // Thursday in current week decides the year\n  const dayNum = d.getUTCDay() || 7;\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n  const weekNo = Math.ceil(((d.getTime() - yearStart.getTime()) / 86400000 + 1) / 7);\n  return { year: d.getUTCFullYear(), week: weekNo };\n}\n\nexport function formatWeekPath(date: Date): string {\n  const { year, week } = isoWeek(date);\n  const ww = String(week).padStart(2, \"0\");\n  return `${year}-${ww}`;\n}\n\n", "export interface Env {\n  DASHBOARD_PASSWORD: string;\n  SESSION_SECRET: string;\n  SHEETS_ID: string;\n  GOOGLE_SERVICE_ACCOUNT_JSON: string;\n  LASTFM_USER: string;\n  LASTFM_API_KEY: string;\n  YOUTUBE_CLIENT_ID: string;\n  YOUTUBE_CLIENT_SECRET: string;\n  PUBLIC_REPO: string;\n  PUBLIC_REPO_BRANCH: string;\n  GITHUB_DEPLOY_KEY: string;\n  // Optional GitHub token for REST API publishing (preferred over deploy key in Workers)\n  GITHUB_TOKEN?: string;\n  RUN_STATUS: KVNamespace;\n}\n\nexport type Bucket = \"music\" | \"video\" | \"article\" | \"tweet\" | \"other\";\n\nexport interface EntryRow {\n  id: string;\n  date: string; // YYYY-MM-DD local ET\n  bucket: Bucket;\n  title: string;\n  url: string;\n  source: string; // lastfm | youtube | manual | etc.\n  notes: string;\n  is_public: boolean;\n  created_at: string; // ISO\n  updated_at: string; // ISO\n}\n\n// Placeholder interfaces for Sheets operations.\n// Implement using Google Sheets API v4 with service account in the private repo.\n\nexport class SheetsClient {\n  constructor(private env: Env) {}\n\n  private async token(): Promise<string> {\n    const sa = JSON.parse(this.env.GOOGLE_SERVICE_ACCOUNT_JSON);\n    const scope = \"https://www.googleapis.com/auth/spreadsheets\";\n    const { getGoogleAccessToken } = await import(\"./utils/googleAuth\");\n    return getGoogleAccessToken({ client_email: sa.client_email, private_key: sa.private_key }, scope);\n  }\n\n  private async ensureHeader(): Promise<void> {\n    const values = await this.valuesGet(\"media_log!1:1\");\n    if (!values || values.length === 0) {\n      await this.valuesAppend([[\"id\",\"date\",\"bucket\",\"title\",\"url\",\"source\",\"notes\",\"is_public\",\"created_at\",\"updated_at\"]]);\n    }\n  }\n\n  async appendRows(rows: EntryRow[]): Promise<void> {\n    await this.ensureHeader();\n    const values = rows.map(r => [\n      r.id,\n      r.date,\n      r.bucket,\n      r.title,\n      r.url,\n      r.source,\n      r.notes ?? \"\",\n      r.is_public ? \"TRUE\" : \"FALSE\",\n      r.created_at,\n      r.updated_at,\n    ]);\n    await this.valuesAppend(values);\n  }\n\n  async listRowsSince(days: number): Promise<EntryRow[]> {\n    console.log(`listRowsSince: Fetching last ${days} days of data`);\n    const all = await this.allRows();\n    console.log(`listRowsSince: Retrieved ${all.length} total rows from sheets`);\n\n    // Fix: Use milliseconds arithmetic instead of setDate to avoid month boundary issues\n    const cutoff = new Date(Date.now() - days * 24 * 60 * 60 * 1000);\n    const cutoffStr = cutoff.toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" });\n    console.log(`listRowsSince: Cutoff date is ${cutoffStr}`);\n\n    const filtered = all.filter(r => r.date >= cutoffStr);\n    console.log(`listRowsSince: After date filtering, ${filtered.length} rows remain`);\n    console.log(`listRowsSince: Date comparison - cutoff: ${cutoffStr}, sample entries:`, all.slice(0, 3).map(r => ({ date: r.date, title: r.title?.substring(0, 20) })));\n\n    if (filtered.length > 0) {\n      console.log(`listRowsSince: Sample filtered entry:`, {\n        id: filtered[0].id?.substring(0, 20),\n        date: filtered[0].date,\n        title: filtered[0].title?.substring(0, 30),\n        is_public: filtered[0].is_public,\n        bucket: filtered[0].bucket\n      });\n    }\n\n    return filtered;\n  }\n\n  async listRowsForIsoWeek(year: number, week: number): Promise<EntryRow[]> {\n    console.log(`listRowsForIsoWeek: Starting for week ${year}-${week}`);\n    const all = await this.allRows();\n    console.log(`listRowsForIsoWeek: Retrieved ${all.length} total rows`);\n\n    // Compute Mon..Sun ET-local date strings for the specified week\n    const days = this.weekDays(year, week);\n\n    const set = new Set(days);\n    const filtered = all.filter(r => set.has(r.date));\n    console.log(`listRowsForIsoWeek: Found ${filtered.length} entries for week ${year}-${week}`);\n\n    if (filtered.length > 0) {\n      console.log(`listRowsForIsoWeek: Sample entries:`, filtered.slice(0, 3).map(r => ({\n        date: r.date,\n        title: r.title?.substring(0, 30),\n        is_public: r.is_public\n      })));\n      const publicCount = filtered.filter(r => r.is_public).length;\n      console.log(`listRowsForIsoWeek: ${publicCount} are public, ${filtered.length - publicCount} are private`);\n    }\n\n    return filtered;\n  }\n\n  async updateRow(id: string, patch: Partial<Pick<EntryRow, \"notes\" | \"is_public\">>): Promise<void> {\n    console.log(`updateRow: Starting update for id ${id}, patch:`, patch);\n\n    const sheet = await this.valuesGet(\"media_log!A:Z\");\n    if (!sheet || sheet.length === 0) {\n      console.log(\"updateRow: No sheet data found\");\n      return;\n    }\n\n    console.log(`updateRow: Retrieved sheet with ${sheet.length} rows`);\n    const header = sheet[0];\n    let idIdx = header.indexOf(\"id\");\n    if (idIdx < 0) idIdx = 0;\n    const notesIdx = header.indexOf(\"notes\");\n    const pubIdx = header.indexOf(\"is_public\");\n    const updatedIdx = header.indexOf(\"updated_at\");\n\n    console.log(`updateRow: Column indices - id: ${idIdx}, notes: ${notesIdx}, is_public: ${pubIdx}, updated_at: ${updatedIdx}`);\n\n    for (let i = 1; i < sheet.length; i++) {\n      const row = sheet[i];\n      if (row[idIdx] === id) {\n        console.log(`updateRow: Found matching row at index ${i}, current values:`, {\n          id: row[idIdx],\n          notes: row[notesIdx],\n          is_public: row[pubIdx]\n        });\n\n        if (typeof patch.notes !== \"undefined\" && notesIdx >= 0) {\n          row[notesIdx] = patch.notes ?? \"\";\n          console.log(`updateRow: Updated notes to: \"${patch.notes}\"`);\n        }\n        if (typeof patch.is_public !== \"undefined\" && pubIdx >= 0) {\n          row[pubIdx] = patch.is_public ? \"TRUE\" : \"FALSE\";\n          console.log(`updateRow: Updated is_public to: ${patch.is_public ? \"TRUE\" : \"FALSE\"}`);\n        }\n        if (updatedIdx >= 0) {\n          row[updatedIdx] = new Date().toISOString();\n        }\n\n        const range = `media_log!A${i+1}:Z${i+1}`;\n        console.log(`updateRow: Updating range ${range} with row:`, row);\n\n        await this.valuesUpdate(range, [row]);\n        console.log(`updateRow: Successfully updated row for id ${id}`);\n        return;\n      }\n    }\n\n    console.log(`updateRow: No row found with id ${id}`);\n  }\n\n  private async allRows(): Promise<EntryRow[]> {\n    console.log(\"allRows: Starting to fetch recent rows (optimized)\");\n    await this.ensureHeader();\n    console.log(\"allRows: Header ensured, fetching all data with header\");\n    // Fetch all rows to ensure we get the header row properly\n    const values = await this.valuesGet(\"media_log!A:Z\");\n    console.log(`allRows: Raw values response - ${values ? values.length : 0} rows`);\n\n    if (!values || values.length <= 1) {\n      console.log(\"allRows: No data found or only header row\");\n      return [];\n    }\n\n    const header = values[0];\n    console.log(\"allRows: Header columns:\", header);\n    console.log(\"allRows: Header length:\", header.length);\n    console.log(\"allRows: First few header values:\", header.slice(0, 10));\n    console.log(\"allRows: Sample data row:\", values[1]?.slice(0, 10));\n\n    // TEMPORARY FIX: If header is empty or invalid, use expected header\n    // Check if the first column is exactly \"id\" (not just contains \"id\")\n    if (!header || header.length === 0 || header[0] !== \"id\") {\n      console.log(\"allRows: Header seems corrupted, using expected header\");\n      console.log(\"allRows: First header value is:\", header[0]);\n      const expectedHeader = [\"id\", \"date\", \"bucket\", \"title\", \"url\", \"source\", \"notes\", \"is_public\", \"created_at\", \"updated_at\"];\n      console.log(\"allRows: Using fallback header:\", expectedHeader);\n      return this.processRowsWithHeader(expectedHeader, values);\n    }\n    const rows = values.slice(1).map(v => this.mapRow(header, v));\n    const filteredRows = rows.filter(Boolean) as EntryRow[];\n    console.log(`allRows: Mapped and filtered to ${filteredRows.length} valid rows`);\n\n    return filteredRows;\n  }\n\n  private processRowsWithHeader(header: string[], values: string[][]): EntryRow[] {\n    console.log(`processRowsWithHeader: Processing ${values.length} values with fallback header`);\n    // Skip the corrupted first row and process all remaining rows as data\n    const dataRows = values.slice(1);\n    const rows = dataRows.map(v => this.mapRow(header, v));\n    const filteredRows = rows.filter(Boolean) as EntryRow[];\n    console.log(`processRowsWithHeader: Mapped and filtered to ${filteredRows.length} valid rows`);\n    return filteredRows;\n  }\n\n  private mapRow(header: string[], v: string[]): EntryRow | null {\n    const idx = (name: string) => header.indexOf(name);\n    const pick = (name: string) => {\n      const i = idx(name);\n      return i >= 0 ? (v[i] ?? \"\") : \"\";\n    };\n\n    const idValue = pick(\"id\");\n    if (!idValue) {\n      console.log(`mapRow: Rejecting row - no id value`);\n      return null;\n    }\n\n    return {\n      id: idValue,\n      date: pick(\"date\"),\n      bucket: (pick(\"bucket\") as any) || \"other\",\n      title: pick(\"title\"),\n      url: pick(\"url\"),\n      source: pick(\"source\"),\n      notes: pick(\"notes\"),\n      is_public: (pick(\"is_public\").toUpperCase() === \"TRUE\"),\n      created_at: pick(\"created_at\"),\n      updated_at: pick(\"updated_at\"),\n    };\n  }\n\n  private weekDays(year: number, week: number): string[] {\n    console.log(`weekDays: Calculating dates for ISO week ${year}-${week}`);\n    // Monday of ISO week\n    const jan4 = new Date(Date.UTC(year, 0, 4));\n    const day = jan4.getUTCDay() || 7;\n    const mondayUTC = new Date(jan4);\n    mondayUTC.setUTCDate(jan4.getUTCDate() - day + 1 + (week - 1) * 7);\n\n    const out: string[] = [];\n    for (let i = 0; i < 7; i++) {\n      const dt = new Date(mondayUTC.getTime());\n      dt.setUTCDate(mondayUTC.getUTCDate() + i);\n      const s = dt.toLocaleDateString(\"en-CA\", { timeZone: \"America/New_York\" });\n      out.push(s);\n    }\n    console.log(`weekDays: Week ${year}-${week} includes dates:`, out);\n    return out;\n  }\n\n  private async valuesGet(range: string): Promise<string[][]> {\n    console.log(`valuesGet: Starting API call for range \"${range}\"`);\n    const token = await this.token();\n    const url = `https://sheets.googleapis.com/v4/spreadsheets/${this.env.SHEETS_ID}/values/${encodeURIComponent(range)}`;\n    console.log(`valuesGet: API URL: ${url}`);\n\n    const res = await fetch(url, { headers: { Authorization: `Bearer ${token}` } });\n    console.log(`valuesGet: Response status: ${res.status} ${res.statusText}`);\n\n    if (!res.ok) {\n      console.log(`valuesGet: API error - status ${res.status}`);\n      const errorText = await res.text();\n      console.log(`valuesGet: Error response body: ${errorText}`);\n      return [] as any;\n    }\n\n    const json = await res.json();\n    console.log(`valuesGet: Response structure:`, {\n      hasValues: !!json.values,\n      valuesLength: json.values?.length || 0,\n      firstRowLength: json.values?.[0]?.length || 0,\n      responseKeys: Object.keys(json)\n    });\n\n    const result = (json.values ?? []) as string[][];\n    console.log(`valuesGet: Returning ${result.length} rows`);\n    return result;\n  }\n\n  private async valuesAppend(values: any[][]): Promise<void> {\n    const token = await this.token();\n    const url = `https://sheets.googleapis.com/v4/spreadsheets/${this.env.SHEETS_ID}/values/${encodeURIComponent(\"media_log!A:Z\")}:append?valueInputOption=RAW`;\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: { Authorization: `Bearer ${token}`, \"content-type\": \"application/json\" },\n      body: JSON.stringify({ values }),\n    });\n    if (!res.ok) {\n      const t = await res.text();\n      throw new Error(`Sheets append failed: ${res.status} ${t}`);\n    }\n  }\n\n  private async valuesUpdate(range: string, values: any[][]): Promise<void> {\n    const token = await this.token();\n    const url = `https://sheets.googleapis.com/v4/spreadsheets/${this.env.SHEETS_ID}/values/${encodeURIComponent(range)}?valueInputOption=RAW`;\n    const res = await fetch(url, {\n      method: \"PUT\",\n      headers: { Authorization: `Bearer ${token}`, \"content-type\": \"application/json\" },\n      body: JSON.stringify({ values }),\n    });\n    if (!res.ok) {\n      const t = await res.text();\n      throw new Error(`Sheets update failed: ${res.status} ${t}`);\n    }\n  }\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["url", "getGoogleAccessToken", "url", "ingestLastFm", "ingestYouTubeLikes", "sha256Hex", "publishWeek"]
}
