*** Begin Patch
*** Update File: Master Build Prompt- build consumed.md
@@
-Master Build Prompt
-You are building a ??oMedia Diet Tracker??? for lnara.com inspired by consumed.today.
+Master Build Prompt
+You are building a Media Diet Tracker for lnara.com inspired by consumed.today.
@@
-Provide a private curation dashboard at /draft/consumed where I can review the week??Ts items.
+Provide a private curation dashboard at /draft/consumed where I can review the week's items.
@@
-Header: ??oMedia Consumed ??" Week [WW], YYYY???
+Header: "Media Consumed — Week [WW], YYYY"
@@
-What you tell them
+What you tell them
@@
-dYY? How they??Tll implement
+How they'll implement
@@
-Repo split
+Repo split
@@
-media-diet-public (on GitHub, public) ?+' your Cloudflare Pages site.
+media-diet-public (on GitHub, public) + your Cloudflare Pages site.
@@
-media-diet-backend (private) ?+' Worker/VPS code.
+media-diet-backend (private) + Worker/VPS code.
@@
-You curate ?+' hit Publish.
+You curate + hit Publish.
@@
-Backend writes HTML digest ?+' pushes into media-diet-public repo.
+Backend writes HTML digest + pushes into media-diet-public repo.
@@
-Cloudflare Pages rebuilds ?+' new digest goes live at lnara.com/consumed/[week].
+Cloudflare Pages rebuilds + new digest goes live at lnara.com/consumed/[week].
@@
-Service account JSON, Last.fm API key, YouTube OAuth creds ?+' stored only in Worker secrets or VPS .env.
+Service account JSON, Last.fm API key, YouTube OAuth creds + stored only in Worker secrets or VPS .env.
@@
-Never in public repo.
+Never in public repo.
+
+---
+
+Confirmed Decisions (2025-09)
+
+- Timezone: America/New_York (NYC/Baltimore). Use ISO week (Mon–Sun) for grouping and publishing.
+- Ingestion cadence: daily at 11:00 PM ET. Implement via Cloudflare Cron at 03:00/04:00 UTC with a local-time gate (hour === 23) and dedupe.
+- YouTube ingestion: use "Liked videos" as proxy for watch history. User will like every watched video for capture.
+- Spotify ingestion: via Last.fm recent tracks for LASTFM_USER.
+- Navigation link: add “Consumed” after first publish (target next Sunday). Not before.
+- No weekly email export for now.
+
+Privacy & Repo Strategy
+
+- Public repo (this site): contains only published static digests at /consumed/[YYYY-WW]/ and a /consumed index page. No draft data, no secrets.
+- Private backend (Cloudflare Worker or small VPS; vanilla Worker routing is sufficient—no Hono required):
+  - Hosts password-protected dashboard at /draft/consumed (or under draft.lnara.com/consumed).
+  - Talks to Google Sheets using a service account; stores secrets in Worker/VPS secrets only.
+  - Runs daily ingesters (Last.fm + YouTube Likes) at 11 PM ET.
+  - On Publish Week: renders static HTML for the week and pushes to the public repo via deploy key or Cloudflare Pages Direct Upload API.
+
+Schema (Google Sheet: media_log)
+
+id | date | bucket | title | url | source | notes | is_public | created_at | updated_at
+
+- Buckets: music | video | article | tweet | other
+- ID rules:
+  - Last.fm: hash(artist|track|timestamp)
+  - YouTube Likes: youtube:videoId|likedAt
+  - Manual entries: UUID v4
+
+Dashboard (/draft/consumed)
+
+- Auth: single password from secret; set HTTP-only session cookie after login. Add noindex headers.
+- View: last 7 days (America/New_York), grouped by day then by bucket.
+- For each item: show title, url, source; editable notes; toggle is_public.
+- Manual add form for article/tweet/other.
+- Button: Publish Week ? selects ISO week, collects is_public=true rows and generates static digest at /consumed/YYYY-WW/index.html. Also updates /consumed/index.html.
+
+Public Pages (/consumed/[week])
+
+- Static HTML only, no live Google Sheets calls.
+- Header: “Media Consumed — Week [WW], YYYY”.
+- Show each day Mon–Sun; if no entries for a day, show “No entries”.
+- Within each day, group items by bucket. Bullet format: [Title](URL) — Notes.
+- Styling: inline CSS or a small /consumed/style.css. Match site typography.
+
+Cron & Time Handling
+
+- Cloudflare Cron is UTC; set 03:00 and 04:00 UTC, then compute local time in America/New_York. Proceed only when local hour === 23 and not processed yet for that day (store last-processed date in KV/Sheet/meta).
+
+Publishing Flow
+
+- Worker fetches entries for selected ISO week where is_public=true.
+- Renders static digest HTML and updates a generated /consumed/index.html listing all published weeks.
+- Commits files into the public repo (this site) via a GitHub deploy key or uses the Cloudflare Pages Direct Upload API. No secrets committed.
+
+Deliverables Update
+
+1) Private backend (Worker/VPS) with routes:
+   - GET /draft/consumed (dashboard)
+   - POST /api/entries (create manual)
+   - POST /api/entries/:id (update notes/is_public)
+   - POST /publish/week?week=YYYY-WW (publish action)
+2) Scripts (or Worker tasks):
+   - ingest_lastfm (daily)
+   - ingest_youtube_likes (daily)
+3) Frontend (private dashboard):
+   - dashboard HTML (password-protected), forms, toggles, notes, publish
+4) Public output (in this repo, generated by backend):
+   - /public/consumed/YYYY-WW/index.html
+   - /public/consumed/index.html
+5) Config/Docs (in backend repo):
+   - .env.example with SHEETS_ID, GOOGLE_SERVICE_ACCOUNT_JSON, LASTFM_USER, LASTFM_API_KEY, YOUTUBE_CLIENT_ID, YOUTUBE_CLIENT_SECRET, DASHBOARD_PASSWORD, PUBLIC_REPO, PUBLIC_REPO_BRANCH, GITHUB_DEPLOY_KEY
+   - blocklist.json, privacy_overrides.json
+   - README with setup, secrets, cron, publish flow
+
+Implementation TODO (Back-End)
+
+- Initialize Worker project; add password auth and simple router.
+- Implement Google Sheets client and schema helpers; ID generation and dedupe.
+- Build Last.fm ingester (recent tracks); schedule daily; dedupe.
+- Build YouTube Likes ingester; OAuth once; schedule daily; dedupe.
+- Dashboard: last 7 days grouped view; edit notes; toggle is_public; manual add.
+- Publish Week: render digest HTML, update index HTML, push to public repo.
+- Add input validation, XSS-safe rendering, and basic rate limits on mutations.
+
+Notes
+
+- Do not add nav link to /consumed until after first publish.
+- Keep drafts private: only Google Sheets + private dashboard. No draft data lands in the public repo.
*** End Patch
